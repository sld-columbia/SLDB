=== Initializing ESP accelerator template ===

  * Enter accelerator name [dummy]: spmv
  * Select design flow (Stratus HLS, Vivado HLS, hls4ml, Catapult HLS, RTL) [S]: R
  * Enter ESP path [/home/elli/sldb_final/esp]: 
  * Enter unique accelerator id as three hex digits [04A]: 0A1
  * Enter accelerator registers
    - register 0 name [size]: spmv_nnz
    - register 0 default value [1]: 4096
    - register 0 max value [4096]: 
    - register 1 name []: spmv_vec_len
    - register 1 default value [1]: 128
    - register 1 max value [128]: 
    - register 2 name []: 
  * Configure PLM size and create skeleton for load and store:
    - Enter data bit-width (8, 16, 32, 64) [32]: 64
    - Enter input data size in terms of configuration registers (e.g. 2 * spmv_vec_len}) [spmv_vec_len]: 
      data_in_size_max = 128
    - Enter output data size in terms of configuration registers (e.g. 2 * spmv_vec_len) [spmv_vec_len]: 
      data_out_size_max = 128
    - Enter an integer chunking factor (use 1 if you want PLM size equal to data size) [1]: 
      Input PLM has 128 64-bits words
      Output PLM has 128 64-bits words
    - Enter number of input data to be processed in batch (can be function of configuration registers) [1]: 
      batching_factor_max = 1
    - Is output stored in place? [N]: 

=== Generated accelerator skeleton for spmv ===
